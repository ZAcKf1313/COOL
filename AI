local char = game:GetService("Players").LocalPlayer.Character
function isthere(folder)
   local a ={}
for i,v in pairs(workspace:GetChildren()) do
   if v:IsA("Folder") and v.Name == folder then
       table.insert(a, v)
       end
end
if#a==0 then
   return false
   else
       return true
       end
end

local Filter1
if isthere("Filter") == false then
  local Filter = Instance.new("Folder", workspace)
  Filter.Name = "Filter"
  Filter1 = Filter
else
  Filter1 = workspace:WaitForChild("Filter")
end

local Map1
if isthere("Map") == false then
  local Map = Instance.new("Folder", workspace)
  Map.Name = "Map"
  Map1 = Map
else
  Map1 = workspace:WaitForChild("Map")
end

local ActivePlayers1
if isthere("ActivePlayers") == false then
  local ActivePlayers = Instance.new("Folder", workspace)
  ActivePlayers.Name = "ActivePlayers"
  ActivePlayers1 = ActivePlayers
else
  ActivePlayers1 = workspace:WaitForChild("ActivePlayers")
end



local v1 = {};
grips = {
	up = CFrame.new(0, 0, -1.70000005, 0, 0, 1, 1, 0, 0, 0, 1, 0), 
	out = CFrame.new(0, 0, -1.70000005, 0, 1, 0, 1, -0, 0, 0, 0, -1)
	-------- coroutine ---
coroutine.wrap(function()

while task.wait(1) do
for i,v in pairs(game:GetService("Workspace"):GetDescendants()) do
    if v:IsA("Humanoid") and v.Parent:IsA("Model") then
          v.Parent.Parent = workspace.ActivePlayers      
   end
 end
end

end)()
};
for v2, v3 in pairs(script:GetChildren()) do
	local v4 = require(v3);
	if typeof(v4) == "table" then
		for v5, v6 in pairs(v4) do
			v1[v5] = v6;
		end;
	else
		v1[v3.Name] = v4;
	end;
end;
local l__RunService__1 = game:GetService("RunService");
return function(p1)
	if p1 then
		local l__Humanoid__7 = p1:FindFirstChild("Humanoid");
		local v8 = p1:FindFirstChildOfClass("Tool");
		if not v8 then
			while true do
				v8 = p1:FindFirstChildOfClass("Tool");
				wait();
				if v8 then
					break;
				end;			
			end;
		end;
		local l__Handle__9 = v8:FindFirstChild("Handle");
		local l__PrimaryPart__10 = p1.PrimaryPart;
		local v11 = 0;
		local v12 = 0;
		local v13 = 0;
		local v14 = false;
		while p1.PrimaryPart and l__Humanoid__7.Health > 0 and p1.Parent == workspace:WaitForChild("players") do
			v11 = v11 + l__RunService__1.RenderStepped:Wait();
			local v15 = v1.getClosestEnemy(p1);
			if v15 then
				local v16 = v15:FindFirstChildOfClass("Tool");
				if not v16 then
					while true do
						v16 = p1:FindFirstChildOfClass("Tool");
						wait();
						if v16 then
							break;
						end;					
					end;
				end;
				local l__Handle__17 = v16:WaitForChild("Handle");
				local v18 = v1.getClosestPart(l__Handle__9.Position, v15);
				local l__Humanoid__19 = v15:WaitForChild("Humanoid");
				local v20 = false;
				if v16 and v16.Grip == grips.out then
					if not v14 then
						v13 = v11;
					end;
					v14 = true;
				end;
				if v8.Grip ~= grips.out then
					v20 = true;
				end;
				local l__Position__21 = l__PrimaryPart__10.Position;
				local l__Position__22 = v15.PrimaryPart.Position;
				local v23 = math.sqrt((l__Position__21.X - l__Position__22.X) ^ 2 + (l__Position__21.Z - l__Position__22.Z) ^ 2);
				local v24 = v1.getDistance(p1, v15);
				local l__Position__25 = v15.PrimaryPart.Position;
				if v14 and v20 and math.abs(v15.PrimaryPart.Position.Y - p1.PrimaryPart.Position.Y) < 3 and v24 > 6 and v16 then
					local l__Position__26 = l__PrimaryPart__10.Position;
					local v27 = l__Handle__17.Position + v15.PrimaryPart.CFrame.lookVector * l__Handle__17.Size.Y * 2.2;
					p1:SetPrimaryPartCFrame(CFrame.lookAt(l__Position__26, v27 - Vector3.new(0, v27.Y - l__Position__26.Y, 0)) * CFrame.Angles(0, 0.30543261909900765, 0));
				else
					if v8.Parent ~= p1 then
						v8:WaitForChild("Equip"):FireServer();
					end;
					v8.Parent = p1;
					p1:SetPrimaryPartCFrame(CFrame.lookAt(l__PrimaryPart__10.Position, v18.Position - Vector3.new(0, v18.Position.Y - l__PrimaryPart__10.Position.Y, 0)) * CFrame.Angles(0, 0.30543261909900765, 0));
				end;
				if v14 then
					local v28 = 8;
				else
					v28 = 7;
				end;
				if ((l__PrimaryPart__10.Position - v15.PrimaryPart.Position).Unit - l__Humanoid__19.MoveDirection).Magnitude < 1 then
					local v29 = 2;
				else
					v29 = 0;
				end;
				local v30 = v28 + v29;
				if v8.Enabled and v8.Grip == grips.up then
					v12 = v11;
				end;
				if v16 and not v16.Enabled and v11 - v13 > 0.1 and not (v11 - v13 < 0.2) and v11 - v12 > 0.05 then
					v30 = v30 - 2;
				end;
				if v11 - v12 > 0.5 then
					v30 = v30 + 2;
				end;
				if v23 < 15 then
					v8:WaitForChild("Use"):FireServer();
				end;
				if v24 > 8 and l__Humanoid__7.Health < v15.Humanoid.Health then
					v30 = v30 + 2;
				end;
				local v31 = -v15.PrimaryPart.CFrame.rightVector;
				local v32 = -v15.PrimaryPart.CFrame.lookVector;
				if v1.sideCast(v15) or v8.Grip == grips.up then
					v32 = Vector3.new(0, 0, 0);
				end;
				local v33 = l__Position__25 - (l__Position__25 - l__PrimaryPart__10.Position).Unit * v30 * 1.25 + v32;
				local v34 = l__Position__25 - (l__Position__25 - l__PrimaryPart__10.Position).Unit * v30 * 1.25 + v32;
				local v35 = l__Position__25 - (l__Position__25 - l__PrimaryPart__10.Position).Unit * v30 + v32;
				if v15.Humanoid.Health < l__Humanoid__7.Health then
					v31 = v31 * 3;
				end;
				local v36 = l__Humanoid__19:GetPropertyChangedSignal("Jump");
				local u2 = nil;
				local u3 = l__Position__25 - (l__Position__25 - l__PrimaryPart__10.Position).Unit * v30 * 1.25 + v32;
				v36:Connect(function()
					u2 = math.random(1, 10);
					if u2 == 9 then
						coroutine.resume(coroutine.create(function()
							task.wait(0.25);
							l__Humanoid__7.Jump = true;
						end));
						coroutine.resume(coroutine.create(function()
							if 1 == 1 then
								l__Humanoid__7:MoveTo(u3 + v31);
								task.wait(0.5);
								return;
							end;
							if 1 == 2 then
								l__Humanoid__7:MoveTo(u3 - v31);
								task.wait(0.5);
							end;
						end));
					end;
				end);
				local v37 = math.random(1, 250);
				if v24 < v30 then
					coroutine.resume(coroutine.create(function()
						l__Humanoid__7:MoveTo(u3 + v15.PrimaryPart.CFrame.rightVector);
						wait(3);
						l__Humanoid__7:MoveTo(u3 - v15.PrimaryPart.CFrame.rightVector);
					end));
				else
					coroutine.resume(coroutine.create(function()
						l__Humanoid__7:MoveTo(u3 + v15.PrimaryPart.CFrame.rightVector);
						wait(3);
						l__Humanoid__7:MoveTo(u3 - v15.PrimaryPart.CFrame.rightVector);
					end));
				end;
			end;		
		end;
	else
		warn("MODEL IS NOT SET");
	end;
end;

----------------------- AI CODE

function Ai(p1)
local l__Humanoid__7 = p1.Humanoid;
local l__PrimaryPart__8 = p1.PrimaryPart;
local v9 = p1:FindFirstChildOfClass("Tool");
if not v9 then
while true do
v9 = p1:FindFirstChildOfClass("Tool");
wait();
if v9 then
break;
end;
end;
end;
local v10 = 0;
local v11 = 0;
local v12 = 0;
local v13 = false;
while p1.PrimaryPart and l__Humanoid__7.Health > 0  do
v10 = v10 + game:GetService("RunService").RenderStepped:Wait();
local v14 = GetClosestEnemy(p1);
if v14 and v14.Humanoid.Health > 0 then
local v15 = GetClosestPart(v9.Handle.Position, v14);
local v16 = v14:FindFirstChildOfClass("Tool");
local v17 = false;
if v16 and v16.Grip == Grips.Out then
if v13 == false then
v12 = v10;
end;
v13 = true;
end;
if v9.Grip ~= Grips.Out then
v17 = true;
end;
local v18 = v14.Humanoid.Health < p1.Humanoid.Health;
local l__Position__19 = p1.PrimaryPart.Position;
local l__Position__20 = v14.PrimaryPart.Position;
local v21 = math.sqrt((l__Position__19.X - l__Position__20.X) ^ 2 + (l__Position__19.Z - l__Position__20.Z) ^ 2);
local v22 = GetDistance(p1, v14);
local v23 = math.abs(v14.PrimaryPart.Position.Y - p1.PrimaryPart.Position.Y) < 3;
local l__Position__24 = v14.PrimaryPart.Position;
if v13 and v17 and v23 and v22 > 6 and v16 then
local l__Position__25 = l__PrimaryPart__8.Position;
local v26 = v16.Handle.Position + v14.PrimaryPart.CFrame.LookVector * v16.Handle.Size.Y * 2.2;
p1:SetPrimaryPartCFrame(CFrame.lookAt(l__Position__25, v26 - Vector3.new(0, v26.Y - l__Position__25.Y, 0)) * CFrame.Angles(0, 0.30543261909900765, 0));
else
if v9.Parent ~= p1 then
p1:EquipTool(v9)
end;
v9.Parent = p1;
p1:SetPrimaryPartCFrame(CFrame.lookAt(l__PrimaryPart__8.Position, v15.Position - Vector3.new(0, v15.Position.Y - l__PrimaryPart__8.Position.Y, 0)) * CFrame.Angles(0, 0.30543261909900765, 0));
local v27 = 0;
local v28 = v27;
for v29 = 1, 10 do
v27 = v27 + FindBestAngle(p1, v14, v16);
if v28 == v27 then
if v18 then
local v30 = v27 + math.random(-10, 10);
else
v30 = v27 + math.random(-2, 2);
end;
p1:SetPrimaryPartCFrame(CFrame.lookAt(l__PrimaryPart__8.Position, v15.Position - Vector3.new(0, v15.Position.Y - l__PrimaryPart__8.Position.Y, 0)) * CFrame.Angles(0, math.rad(17.5 + v30), 0));
break;
end;
v28 = v27;
p1:SetPrimaryPartCFrame(CFrame.lookAt(l__PrimaryPart__8.Position, v15.Position - Vector3.new(0, v15.Position.Y - l__PrimaryPart__8.Position.Y, 0)) * CFrame.Angles(0, math.rad(17.5 + v27), 0));
end;
end;
local v31 = ((p1.PrimaryPart.Position - v14.PrimaryPart.Position).Unit - v14.Humanoid.MoveDirection).Magnitude < 1;
if v13 then
local v32 = 8;
else
v32 = 7;
end;
if v31 then
local v33 = 2;
else
v33 = 0;
end;
local v34 = v32 + v33;
if v9.Enabled and v9.Grip == Grips.Up then
v11 = v10;
end;
if v16 and not v16.Enabled and v10 - v12 > 0.1 and not (v10 - v12 < 0.2) and v10 - v11 > 0.05 then
v34 = v34 - 2;
end;
if v10 - v11 > 0.5 then
v34 = v34 + 2;
end;
if v21 < 15 then
v9:Activate();
end;
if v22 > 8 and p1.Humanoid.Health < v14.Humanoid.Health then
v34 = v34 + 10;
end;
local v35 = -v14.PrimaryPart.CFrame.RightVector;
if v18 and v23 then
v35 = v35 * 3;
v34 = 2;
end;
if SideCast(v14) or v9.Grip == Grips.Up then
v35 = Vector3.new(0, 0, 0);
end;
local v36 = l__Position__24 - (l__Position__24 - l__PrimaryPart__8.Position).Unit * v34 + v35;
if v18 then

end;
if v22 < v34 then
if GetRetreatDirection(p1, v14, 10) and v31 then
l__Humanoid__7:MoveTo((GetRetreatDirection(p1, v14, 100)));
else
l__Humanoid__7:MoveTo(v36);
end;
else
l__Humanoid__7:MoveTo(v36);
end;
end;
end;
end;

------------------------

Ai(char)
